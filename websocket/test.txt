import {
    CCol,
    CCard,
    CRow,
    CFormSelect,
    CButton
} from '@coreui/react'

import { useState, useEffect, useRef } from 'react';


const CameraPage = () => {
    const [isPaused, setPause] = useState(false);
    const [ws, setWs] = useState(null);
    const [streamWs, setStream] = useState(null);

    const [cameraType, setCameraType] = useState('')
    const models = [
        'Select Model',
        { label: 'yolov5', value: 'yolov5' },
        { label: 'yolov2', value: 'yolov4' },
        { label: 'MTCnn', value: 'mtcnn' },
        { label: 'Haar-Cascade', value: 'haar' }

    ]

    useEffect(() => {
        const wsClient = new WebSocket('ws://10.0.10.118:3001');
        wsClient.onopen = () => {
            console.log('ws opened');
            setWs(wsClient);
            setStream(wsClient);
        };
        wsClient.onclose = () => console.log('ws closed');

        return () => {
            wsClient.close();
        }
    }, []);



    useEffect(() => {

        if (!ws) return;

        ws.onmessage = e => {
            if (isPaused) return;
            const message = JSON.parse(e.data);
            console.log('e', message);
        };
    }, [isPaused, ws]);

    function startCamera() {
        setInterval(() => {
            ws.send(JSON.stringify({ type: 'pause', data: isPaused }));


        }, 1000);
        console.log('camera started')
    }
    return (
        <>


            <CRow>
                <CCol md={5}>
                    <CCard>
                        <CFormSelect
                            onChange={e => setCameraType(e.target.value)}
                            aria-label="learn_period"
                            options={[
                                'Select Camera',
                                { label: 'Webcam', value: 'webcam' },
                                { label: 'IpCam', value: 'ipcam' },
                                { label: 'USBcam', value: 'usbcam' }
                            ]}
                        />
                    </CCard>
                </CCol>
                <CCol md={5}>
                    <CCard>
                        <CFormSelect
                            onChange={e => setModel(e.target.value)}
                            aria-label="model"
                            options={models}
                        />
                    </CCard>
                </CCol>
                <CCol md={2}>
                    <CCard>
                        {/* <CButton color="primary" onClick={startCamera}>Start</CButton> */}
                        <CButton onClick={() => setPause(!isPaused)}>{isPaused ? 'Resume' : 'Pause'}</CButton>
                    </CCard>
                </CCol>
            </CRow>
        </>
    )
}

export default CameraPage